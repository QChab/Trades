{"abi":[{"type":"function","name":"encodeSingleSwap","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"address"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"inputAmount","type":"uint256","internalType":"uint256"},{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"encodeUseAllBalanceSwap","inputs":[{"name":"pool","type":"address","internalType":"address"},{"name":"tokenIn","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"address"},{"name":"minAmountOut","type":"uint256","internalType":"uint256"},{"name":"wrapOp","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"inputAmount","type":"uint256","internalType":"uint256"},{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506103fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634bd768281461003b578063ec4dcf6b14610067575b600080fd5b61004e61004936600461021f565b61007a565b60405161005e9493929190610274565b60405180910390f35b61004e6100753660046102e4565b6100ef565b60006060600080888888888860001960006040516024016100a1979695949392919061034c565b60408051601f198184030181529190526020810180516001600160e01b0316631d40a0ef60e21b17905273ae563e3f8219521950555f5962419c8919758ea29a909950959796505050505050565b6000606060008060008560ff166001148061010d57508560ff166003145b156101425761013073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2336101bf565b61013b90333161039e565b905061014f565b61014c89336101bf565b90505b898989838a600019600060405160240161016f979695949392919061034c565b60408051601f198184030181529190526020810180516001600160e01b0316631d40a0ef60e21b17905273ae563e3f8219521950555f5962419c8919758ea29b909a509098975095505050505050565b60006040516370a0823160e01b8152826004820152600080602483875afa806101e757600080fd5b503d6101f257600080fd5b60400160206000823e519392505050565b80356001600160a01b038116811461021a57600080fd5b919050565b600080600080600060a0868803121561023757600080fd5b61024086610203565b945061024e60208701610203565b935061025c60408701610203565b94979396509394606081013594506080013592915050565b600060018060a01b0380871683526020608081850152865180608086015260005b818110156102b15788810183015186820160a001528201610295565b50600060a0828701015260a0601f19601f8301168601019350505084604084015280841660608401525095945050505050565b600080600080600060a086880312156102fc57600080fd5b61030586610203565b945061031360208701610203565b935061032160408701610203565b925060608601359150608086013560ff8116811461033e57600080fd5b809150509295509295909350565b6001600160a01b03978816815295871660208701529390951660408501526060840191909152608083015260a082019290925290151560c082015261010060e082018190526000908201526101200190565b808201808211156103bf57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122008b0bc003dbbb2573194c97414dc67023ac662a9e0772482ba4de1df135ad5a664736f6c63430008130033","sourceMap":"556:4064:0:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634bd768281461003b578063ec4dcf6b14610067575b600080fd5b61004e61004936600461021f565b61007a565b60405161005e9493929190610274565b60405180910390f35b61004e6100753660046102e4565b6100ef565b60006060600080888888888860001960006040516024016100a1979695949392919061034c565b60408051601f198184030181529190526020810180516001600160e01b0316631d40a0ef60e21b17905273ae563e3f8219521950555f5962419c8919758ea29a909950959796505050505050565b6000606060008060008560ff166001148061010d57508560ff166003145b156101425761013073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2336101bf565b61013b90333161039e565b905061014f565b61014c89336101bf565b90505b898989838a600019600060405160240161016f979695949392919061034c565b60408051601f198184030181529190526020810180516001600160e01b0316631d40a0ef60e21b17905273ae563e3f8219521950555f5962419c8919758ea29b909a509098975095505050505050565b60006040516370a0823160e01b8152826004820152600080602483875afa806101e757600080fd5b503d6101f257600080fd5b60400160206000823e519392505050565b80356001600160a01b038116811461021a57600080fd5b919050565b600080600080600060a0868803121561023757600080fd5b61024086610203565b945061024e60208701610203565b935061025c60408701610203565b94979396509394606081013594506080013592915050565b600060018060a01b0380871683526020608081850152865180608086015260005b818110156102b15788810183015186820160a001528201610295565b50600060a0828701015260a0601f19601f8301168601019350505084604084015280841660608401525095945050505050565b600080600080600060a086880312156102fc57600080fd5b61030586610203565b945061031360208701610203565b935061032160408701610203565b925060608601359150608086013560ff8116811461033e57600080fd5b809150509295509295909350565b6001600160a01b03978816815295871660208701529390951660408501526060840191909152608083015260a082019290925290151560c082015261010060e082018190526000908201526101200190565b808201808211156103bf57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122008b0bc003dbbb2573194c97414dc67023ac662a9e0772482ba4de1df135ad5a664736f6c63430008130033","sourceMap":"556:4064:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:497;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2589:901;;;;;;:::i;:::-;;:::i;1408:497::-;1592:14;1608:21;1631:19;1652:7;1764:4;1770:7;1779:8;1789;1799:12;-1:-1:-1;;1823:5:0;1683:160;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1683:160:0;;;;;;;;;;;;;;-1:-1:-1;;;;;1683:160:0;-1:-1:-1;;;1683:160:0;;;688:42;;1683:160;;-1:-1:-1;1880:8:0;;;-1:-1:-1;;;;;;1408:497:0:o;2589:901::-;2776:14;2792:21;2815:19;2836:7;2923:21;2958:6;:11;;2968:1;2958:11;:26;;;;2973:6;:11;;2983:1;2973:11;2958:26;2954:283;;;3108:34;842:42;3131:10;3108:16;:34::i;:::-;3087:55;;:10;:18;:55;:::i;:::-;3071:71;;2954:283;;;3189:37;3206:7;3215:10;3189:16;:37::i;:::-;3173:53;;2954:283;3339:4;3345:7;3354:8;3364:13;3379:12;-1:-1:-1;;3403:5:0;3258:165;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3258:165:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3258:165:0;-1:-1:-1;;;3258:165:0;;;688:42;;3258:165;;-1:-1:-1;3460:13:0;;;-1:-1:-1;688:42:0;-1:-1:-1;;;;;;2589:901:0:o;3714:904::-;3794:20;3866:4;3860:11;-1:-1:-1;;;3940:3:0;3933:79;4048:7;4041:4;4036:3;4032:14;4025:31;4201:1;4198;4192:4;4187:3;4180:5;4173;4162:41;4226:7;4216:35;;4247:1;4244;4237:12;4216:35;;4367:16;4357:44;;4397:1;4394;4387:12;4357:44;4511:4;4502:14;4555:4;4552:1;4502:14;4529:31;4589:13;;3714:904;-1:-1:-1;;;3714:904:0:o;14:173:25:-;82:20;;-1:-1:-1;;;;;131:31:25;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:472::-;287:6;295;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;412:29;431:9;412:29;:::i;:::-;402:39;;460:38;494:2;483:9;479:18;460:38;:::i;:::-;450:48;;517:38;551:2;540:9;536:18;517:38;:::i;:::-;192:472;;;;-1:-1:-1;507:48:25;;602:2;587:18;;574:32;;-1:-1:-1;653:3:25;638:19;625:33;;192:472;-1:-1:-1;;192:472:25:o;669:820::-;863:4;909:1;905;900:3;896:11;892:19;950:2;942:6;938:15;927:9;920:34;973:2;1011:3;1006:2;995:9;991:18;984:31;1044:6;1038:13;1088:6;1082:3;1071:9;1067:19;1060:35;1113:1;1123:141;1137:6;1134:1;1131:13;1123:141;;;1233:14;;;1229:23;;1223:30;1198:17;;;1217:3;1194:27;1187:67;1152:10;;1123:141;;;1127:3;1314:1;1308:3;1299:6;1288:9;1284:22;1280:32;1273:43;1384:3;1377:2;1373:7;1368:2;1360:6;1356:15;1352:29;1341:9;1337:45;1333:55;1325:63;;;;1424:6;1419:2;1408:9;1404:18;1397:34;1479:2;1471:6;1467:15;1462:2;1451:9;1447:18;1440:43;;669:820;;;;;;;:::o;1494:561::-;1587:6;1595;1603;1611;1619;1672:3;1660:9;1651:7;1647:23;1643:33;1640:53;;;1689:1;1686;1679:12;1640:53;1712:29;1731:9;1712:29;:::i;:::-;1702:39;;1760:38;1794:2;1783:9;1779:18;1760:38;:::i;:::-;1750:48;;1817:38;1851:2;1840:9;1836:18;1817:38;:::i;:::-;1807:48;;1902:2;1891:9;1887:18;1874:32;1864:42;;1956:3;1945:9;1941:19;1928:33;2001:4;1994:5;1990:16;1983:5;1980:27;1970:55;;2021:1;2018;2011:12;1970:55;2044:5;2034:15;;;1494:561;;;;;;;;:::o;2060:882::-;-1:-1:-1;;;;;2511:15:25;;;2493:34;;2563:15;;;2558:2;2543:18;;2536:43;2615:15;;;;2610:2;2595:18;;2588:43;2662:2;2647:18;;2640:34;;;;2705:3;2690:19;;2683:35;2473:3;2734:19;;2727:35;;;;2806:14;;2799:22;2793:3;2778:19;;2771:51;2443:3;2853;2838:19;;2831:31;;;2414:4;2878:18;;;2871:29;2932:3;2917:19;;2060:882::o;2947:222::-;3012:9;;;3033:10;;;3030:133;;;3085:10;3080:3;3076:20;3073:1;3066:31;3120:4;3117:1;3110:15;3148:4;3145:1;3138:15;3030:133;2947:222;;;;:::o","linkReferences":{}},"methodIdentifiers":{"encodeSingleSwap(address,address,address,uint256,uint256)":"4bd76828","encodeUseAllBalanceSwap(address,address,address,uint256,uint8)":"ec4dcf6b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"encodeSingleSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"wrapOp\",\"type\":\"uint8\"}],\"name\":\"encodeUseAllBalanceSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"encodeSingleSwap(address,address,address,uint256,uint256)\":{\"params\":{\"amountIn\":\"Amount of input tokens\",\"minAmountOut\":\"Minimum acceptable output\",\"pool\":\"The pool address to swap through\",\"tokenIn\":\"Address of input token\",\"tokenOut\":\"Address of output token\"},\"returns\":{\"_3\":\"tokenIn The tokenIn address\",\"callData\":\"The encoded swap call\",\"inputAmount\":\"The actual amount to be used\",\"target\":\"The Router contract address\"}},\"encodeUseAllBalanceSwap(address,address,address,uint256,uint8)\":{\"details\":\"Special function for intermediate hops that use entire balance\",\"params\":{\"minAmountOut\":\"Minimum acceptable output (can be 0 for intermediate)\",\"pool\":\"The pool address to swap through\",\"tokenIn\":\"Address of input token\",\"tokenOut\":\"Address of output token\",\"wrapOp\":\"Wrap operation: 0=none, 1=wrap ETH before, 3=unwrap WETH before\"},\"returns\":{\"_3\":\"tokenIn Returns the tokenIn\",\"callData\":\"The encoded swap call with actual balance\",\"inputAmount\":\"Returns the actual balance amount\",\"target\":\"The Router contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"encodeSingleSwap(address,address,address,uint256,uint256)\":{\"notice\":\"Encode a single swap for Balancer V3 via Router\"},\"encodeUseAllBalanceSwap(address,address,address,uint256,uint8)\":{\"notice\":\"Encode a swap using all available balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BalancerEncoder.sol\":\"BalancerEncoder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/BalancerEncoder.sol\":{\"keccak256\":\"0xd8bd165345599e17e1e0a40f6b74ddd5fdb85b24a3be6670656d16024cfa1b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd471f355bbbb67ea8d1301a27966f9ff49edeb4740d3011c27585d8769e9d6\",\"dweb:/ipfs/QmX94Yy8PQTwBadnLm4zQb5PiWKtJHHigD9w8JmPY28gcT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"stateMutability":"pure","type":"function","name":"encodeSingleSwap","outputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint8","name":"wrapOp","type":"uint8"}],"stateMutability":"view","type":"function","name":"encodeUseAllBalanceSwap","outputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"encodeSingleSwap(address,address,address,uint256,uint256)":{"params":{"amountIn":"Amount of input tokens","minAmountOut":"Minimum acceptable output","pool":"The pool address to swap through","tokenIn":"Address of input token","tokenOut":"Address of output token"},"returns":{"_3":"tokenIn The tokenIn address","callData":"The encoded swap call","inputAmount":"The actual amount to be used","target":"The Router contract address"}},"encodeUseAllBalanceSwap(address,address,address,uint256,uint8)":{"details":"Special function for intermediate hops that use entire balance","params":{"minAmountOut":"Minimum acceptable output (can be 0 for intermediate)","pool":"The pool address to swap through","tokenIn":"Address of input token","tokenOut":"Address of output token","wrapOp":"Wrap operation: 0=none, 1=wrap ETH before, 3=unwrap WETH before"},"returns":{"_3":"tokenIn Returns the tokenIn","callData":"The encoded swap call with actual balance","inputAmount":"Returns the actual balance amount","target":"The Router contract address"}}},"version":1},"userdoc":{"kind":"user","methods":{"encodeSingleSwap(address,address,address,uint256,uint256)":{"notice":"Encode a single swap for Balancer V3 via Router"},"encodeUseAllBalanceSwap(address,address,address,uint256,uint8)":{"notice":"Encode a swap using all available balance"}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/BalancerEncoder.sol":"BalancerEncoder"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/BalancerEncoder.sol":{"keccak256":"0xd8bd165345599e17e1e0a40f6b74ddd5fdb85b24a3be6670656d16024cfa1b86","urls":["bzz-raw://3bd471f355bbbb67ea8d1301a27966f9ff49edeb4740d3011c27585d8769e9d6","dweb:/ipfs/QmX94Yy8PQTwBadnLm4zQb5PiWKtJHHigD9w8JmPY28gcT"],"license":"MIT"}},"version":1},"id":0}